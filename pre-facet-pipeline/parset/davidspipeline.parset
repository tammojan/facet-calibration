#FacetAdd pipeline
#pipeline.steps=[make_facet_skymodel_cal, make_face_skymodel_all, add_cal, add_all, phaseshift_cal, phaseshift_all, phaseshift_sub]

#FacetSetup pipeline
#pipeline.steps=[facet_setup_apply, facet_setup_average1, facet_setup_average2, facet_setup_concat1, facet-setup_concat2]

#field_ops pipeline?
#pipeline.steps=[createmap,loopim,convertimage,casatobbs,wscleantwo]
pipeline.steps=[createmap,wsclean,toystep,mask]
pipeline.pluginpath=plugins

createmap.control.kind          =   plugin
createmap.control.type          =   addMapfile
createmap.control.cmdline.create=   mapfile_from_folder
createmap.control.mapfile_dir   =   input.output.mapfile_dir
createmap.control.filename      =   initial.mapfile
createmap.control.folder        =   /home/zam/sfroehli/PipelineExample/data

chgcentre.control.type          =   executable_args
chgcentre.control.executable    =   /path/to/bin/chgcentre
chgcentre.control.inplace       =   True
chgcentre.control.arguments     =   [-zenith, -shiftback, createmap.output.mapfile]
#chgcentre.control.max_per_node =   24

loopim.control.kind             =   loop
loopim.control.loopsteps        =   [wsclean,mask,wsclean2]
loopim.control.loopcount        =   1

wsclean.control.type            =   wsclean
wsclean.argument.flags          =   [-joinchannels,-no-update-model-required,createmap.output.mapfile]
wsclean.argument.size           =   512 512
wsclean.argument.nwlayers       =   wplanes
wsclean.argument.niter          =   100
wsclean.argument.threshold      =   '0mJy'
wsclean.argument.pol            =   I
wsclean.argument.weight         =   briggs -0.25
wsclean.argument.channelsout    =   1
wsclean.argument.mgain          =   0.8
wsclean.argument.gain           =   0.1
wsclean.argument.j              =   12
wsclean.argument.minuv-l        =   80
wsclean.argument.maxuv-l        =   7000
wsclean.argument.scale          =   0.01

toystep.control.type = pythonplugin
toystep.control.executable = /home/zam/sfroehli/PipelineExample/bin/toystep.py
toystep.argument.flags = wsclean.output.wsclean-image.fits.mapfile
toystep.argument.optional = 5.0
toystep.argument.threshpix = 4

mask.control.type               =   make_clean_mask
mask.control.outputkey          =   outname
mask.argument.flags             =   [wsclean.output.wsclean-image.fits.mapfile,outname]
mask.argument.image_beam        =   None
mask.argument.atrous_do         =   False
mask.argument.threshisl         =   toystep.output.optionalhalf.mapfile
mask.argument.threshpix         =   toystep.output.threspix.mapfile
mask.argument.rmsbox            =   (60,20)
mask.argument.iterate_threshold =   False
mask.argument.adaptive_rmsbox   =   False
mask.argument.img_format        =   fits

wsclean2.control.type           =   wsclean
wsclean2.argument.flags         =   [-joinchannels,-no-update-model-required,createmap.output.mapfile]
wsclean2.argument.fitsmask      =   mask.output.mapfile
wsclean2.argument.size          =   512 512
wsclean2.argument.nwlayers      =   wplanes
wsclean2.argument.niter         =   100
wsclean2.argument.threshold     =   '0mJy'
wsclean2.argument.pol           =   I
wsclean2.argument.weight        =   briggs -0.25
wsclean2.argument.channelsout   =   1
wsclean2.argument.mgain         =   0.8
wsclean2.argument.gain          =   0.1
wsclean2.argument.j             =   12
wsclean2.argument.minuv-l       =   80
wsclean2.argument.maxuv-l       =   7000
wsclean2.argument.scale         =   0.01

convertimage.control.type       =   executable_args
convertimage.control.executable =   /home/zam/sfroehli/PipelineExample/bin/convert_fits_to_image.py
convertimage.control.mapfile_in =   wsclean2.output.wsclean2-model.fits.mapfile
convertimage.control.inputkey   =   image
convertimage.control.arguments  =   [image,True]

casatobbs.control.type          =   casapy2bbs
casatobbs.control.mapfile_in    =   wsclean2.output.wsclean2-model.image.mapfile
casatobbs.control.inputkey      =   inputmodel
casatobbs.control.outputkey     =   outfile
casatobbs.control.arguments     =   [inputmodel,outfile]

wscleantwo.control.type         =   wsclean
wscleantwo.control.mapfile_in   =   createmap.output.mapfile
wscleantwo.control.mapfile_out  =   wsclean.output.mapfile
wscleantwo.control.inputkey     =   inputms
wscleantwo.control.outputkey    =   name
wscleantwo.control.args_format  =   wsclean
wscleantwo.control.arguments    =   [-predict,inputms]
#wscleantwo.control.max_per_node=   12
wscleantwo.argument.size        =   512 512
wscleantwo.argument.scale       =   0.01
wscleantwo.argument.channelsout =   1
wscleantwo.argument.j           =   12

subtract.control.type           =   calibrate-stand-alone
subtract.control.mapfiles_in    =   []
subtract.control.inputkeys      =   []
subtract.control.arguments[]

average.control.type            =   dppp
average.control.mapfiles_in     =   []
average.control.inputkeys       =   []
average.control.arguments[]

imageloop2.control.kind         =   loop
imageloop2.control.loopsteps    =   [imageloop2_wsclean1,imageloop_mask2,imageloop_wsclean2]
imageloop2.control.loopcount    =   1

########################################################################################
#FacetAdd pipeline #####################################################################

make_facet_skymodel_cal.control.type        =   make_facet_skymodel
make_facet_skymodel_cal.control.outputkey   =   outmodel
make_facet_skymodel_cal.flags               =   [inputmapfile,outmodel]
make_facet_skymodel_cal.argument.cal_only   =   True
make_facet_skymodel_cal.argument.vertices   =   None
make_facet_skymodel_cal.argument.facet_ra   =   0.0
make_facet_skymodel_cal.argument.facet_dec  =   0.0
make_facet_skymodel_cal.argument.cal_radius_deg=0.0

make_facet_skymodel_all.control.type        =   make_facet_skymodel
make_facet_skymodel_all.control.outputkey   =   outmodel
make_facet_skymodel_all.flags               =   [inputmapfile,outmodel]
make_facet_skymodel_all.argument.cal_only   =   False
make_facet_skymodel_all.argument.vertices   =   None
make_facet_skymodel_all.argument.facet_ra   =   0.0
make_facet_skymodel_all.argument.facet_dec  =   0.0
make_facet_skymodel_all.argument.cal_radius_deg=0.0

add_cal.control.type                        =   calibrate-stand-alone
add_cal.argument.flags                      =   [?]

add_all.control.type                        =   calibrate-stand-alone
add_all.argument.flags                      =   [?]

phaseshift_cal.control.type                 =   dppp
phaseshift_cal.control.outputkey            =   msout
phaseshift_cal.argument.msin                =   ?mapfile?
phaseshift_cal.argument.msin.datacolumn     =   ?
phaseshift_cal.argument.msout.writefullresflag=False
phaseshift_cal.argument.steps               =   [shift]
phaseshift_cal.argument.shift.type          =   phaseshifter
phaseshift_cal.argument.shift.phasecenter   =   [?,?]

phaseshift_all.control.type                 =   dppp
phaseshift_all.control.outputkey            =   msout
phaseshift_all.argument.msin                =   ?mapfile?
phaseshift_all.argument.msin.datacolumn     =   ?
phaseshift_all.argument.msout.writefullresflag=False
phaseshift_all.argument.steps               =   [shift]
phaseshift_all.argument.shift.type          =   phaseshifter
phaseshift_all.argument.shift.phasecenter   =   [?,?]

phaseshift_sub.control.type                 =   dppp
phaseshift_sub.control.outputkey            =   msout
phaseshift_sub.argument.msin                =   ?mapfile?
phaseshift_sub.argument.msin.datacolumn     =   ?
phaseshift_sub.argument.msout.writefullresflag=False
phaseshift_sub.argument.steps               =   [shift]
phaseshift_sub.argument.shift.type          =   phaseshifter
phaseshift_sub.argument.shift.phasecenter   =   [?,?]

# or phaseshift with the phaseshift_dpp type defined in the task.cfg.
# uses a parset with default dppp arguments. so only variables for this speficially 
# defined step go here. 
phaseshift_example.control.type             =   phaseshift_dppp
phaseshift_example.argument.msin            =   ?mapfile?
phaseshift_example.argument.msin.datacolumn =   ?
phaseshift_example.argument.shift.phasecenter=[?,?]

########################################################################################
# FacetSetup ###########################################################################

facet_setup_apply.control.type                      =   calibrate-stand-alone
facet_setup_apply.argument.flags                    =   []

facet_setup_average1.control.type                   =   dppp
facet_setup_average1.control.outputkey              =   msout
facet_setup_average1.argument.msin                  =   ?mapfile?
facet_setup_average1.argument.msin.datacolumn       =   ?
facet_setup_average1.argument.msin.autoweight       =   False
facet_setup_average1.argument.msout.writefullresflag=   False
facet_setup_average1.argument.steps                 =   [avg]
facet_setup_average1.argument.avg.type              =   squash
facet_setup_average1.argument.avg.freqstep          =   ?
facet_setup_average1.argument.avg.timestep          =   ?

facet_setup_average2.control.type                   =   dppp
facet_setup_average2.control.outputkey              =   msout
facet_setup_average2.argument.msin                  =   ?mapfile?
facet_setup_average2.argument.msin.datacolumn       =   ?
facet_setup_average2.argument.msin.autoweight       =   False
facet_setup_average2.argument.msout.writefullresflag=   False
facet_setup_average2.argument.steps                 =   [avg]
facet_setup_average2.argument.avg.type              =   squash
facet_setup_average2.argument.avg.freqstep          =   ?
facet_setup_average2.argument.avg.timestep          =   ?

facet_setup_concat1.control.type                    =   dppp
facet_setup_concat1.control.outputkey               =   msout
facet_setup_concat1.argument.msin                   =   ?mapfile?
facet_setup_concat1.argument.msin.autoweight        =   False
facet_setup_concat1.argument.msout.writefullresflag =   False
facet_setup_concat1.argument.steps                  =   []

facet_setup_concat2.control.type                    =   dppp
facet_setup_concat2.control.outputkey               =   msout
facet_setup_concat2.argument.msin                   =   ?mapfile?
facet_setup_concat2.argument.msin.autoweight        =   False
facet_setup_concat2.argument.msout.writefullresflag =   False
facet_setup_concat2.argument.steps                  =   []

########################################################################################
# FacetImage ###########################################################################
#pipeline.steps=[facet_image_apply, facet_image_average, facet_image_chgcentre,mergemaps?,facet_image_iterate , facet_image_fft]

facet_image_apply.control.type                      =   calibrate-stand-alone
facet_image_apply.argument.flags                    =   []

facet_image_average.control.type                    =   dppp
facet_image_average.control.outputkey               =   msout
facet_image_average.argument.msin                   =   ?mapfile?
facet_image_average.argument.msin.datacolumn        =   ?
facet_image_average.argument.msin.autoweight        =   False
facet_image_average.argument.msout.writefullresflag =   False
facet_image_average.argument.steps                  =   [avg]
facet_image_average.argument.avg.type               =   squash
facet_image_average.argument.avg.freqstep           =   ?
facet_image_average.argument.avg.timestep           =   ?

facet_image_chgcentre.control.type                  =   chgcentre
facet_image_chgcentre.argument.flags                =   [?]

#mergemaps?

facet_image_iterate.control.type                    =   casapy?

facet_image_fft.control.type                        =   ?imager of your choice?
facet_image_fft.argument.?
facet_image_fft.argument.?
facet_image_fft.argument.?

########################################################################################